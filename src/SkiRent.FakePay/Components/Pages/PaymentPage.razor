@page "/payments/{PaymentId:guid}"
@rendermode InteractiveServer

@using SkiRent.FakePay.Services.Payments
@using SkiRent.FakePay.Models

@inject PaymentService PaymentService
@inject NavigationManager NavigationManager;

<PageTitle>FakePay</PageTitle>

@if (Info != null)
{
	<div class="container p-2">

		<div class="py-5 text-center">
			<h1>FakePay</h1>
			<h5 class="text-danger">A fizetésre kevesebb mint 15 perc áll rendelkezésre!</h5>
		</div>

		<div class="row g-5">

			<div class="col-md-5 col-lg-4 order-md-last">
				<h4 class="d-flex justify-content-between align-items-center mb-3">
					<span class="text-primary">Termékek</span>
					<span class="badge bg-primary rounded-pill">@Info.Items.Count()</span>
				</h4>
				<ul class="list-group mb-3">
					@foreach (var item in Info.Items)
					{
						<li class="list-group-item d-flex justify-content-between lh-sm">
							<div>
								<h6 class="my-0">@item.Name</h6>
								<small class="text-body-secondary">@item.SubText</small>
							</div>
							<span class="text-body-secondary">@item.TotalPrice.ToString("C0", Info.Culture)</span>
						</li>
					}

					<li class="list-group-item d-flex justify-content-between">
						<span>Összesen (@Info.CurrencyCode)</span>
						<strong>@Info.TotalPrice.ToString("C0", Info.Culture)</strong>
					</li>
				</ul>
			</div>

			<div class="col-md-7 col-lg-8">

				<form @onsubmit="MakePayment" novalidate>

					<h4 class="mb-3">Fizetés</h4>

					<div class="row gy-3">
						<div class="col-md-6">
							<label for="cc-name" class="form-label">Kártyán szereplő név</label>
							<input type="text" class="form-control" id="cc-name">
						</div>

						<div class="col-md-6">
							<label for="cc-number" class="form-label">Kártyaszám</label>
							<input type="text" class="form-control" id="cc-number">
						</div>

						<div class="col-md-3">
							<label for="cc-expiration" class="form-label">Lejárat</label>
							<input type="text" class="form-control" id="cc-expiration">
						</div>

						<div class="col-md-3">
							<label for="cc-cvv" class="form-label">CVC/CVV</label>
							<input type="text" class="form-control" id="cc-cvv">
						</div>
					</div>

					<hr class="my-4">

					<div>
						<button class="w-100 btn btn-primary btn-lg" type="submit">Fizetés</button>
						<button class="mt-2 w-100 btn btn-danger btn-lg" type="button" @onclick="CancelPayment">Megszakítás</button>
					</div>
				</form>
			</div>

		</div>
	</div>
}
else
{
	<div class="container py-5 text-center">
		<h6>Nem található ilyen fizetési kérelem.</h6>
	</div>
}

@code {
	[Parameter]
	public Guid PaymentId { get; set; }

	public Payment? Info { get; set; }

	public required PaymentFormModel PaymentDetails { get; set; }

	protected override async Task OnInitializedAsync()
	{
		PaymentDetails = new();
		Info = await PaymentService.GetAsync(PaymentId);
	}

	private async Task MakePayment()
	{
		if (Info is null)
		{
			return;
		}

		var result = await PaymentService.ProcessPaymentAsync(PaymentId);

		if (result is not null)
		{
			NavigationManager.NavigateTo(Info.CancelUrl.ToString(), false);
			return;
		}
		NavigationManager.NavigateTo(Info.SuccessUrl.ToString(), false);
	}

	private async Task CancelPayment()
	{
		if (Info is null)
		{
			return;
		}

		await PaymentService.ProcessPaymentAsync(PaymentId, isCancelled: true);
		NavigationManager.NavigateTo(Info.CancelUrl.ToString(), false);
	}

	public record PaymentFormModel
	{
		public string? FullName { get; set; }

		public string? CardNumber { get; set; }

		public string? CVC { get; set; }

		public DateOnly? ExpirationDate { get; set; }
	}
}
